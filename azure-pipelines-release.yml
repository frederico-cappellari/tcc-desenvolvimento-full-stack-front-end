# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
   branches:
     include:
       - master
       - hml
       - develop

pool:
  name: PROCERGS

variables:
  # Define o nome do ambiente com um valor padrão
  environmentName: 'des'

steps:
# Define o ambiente com base na branch
- powershell: |
    $branchName = "$(Build.SourceBranch)".Replace("refs/heads/", "")
    if ($branchName -eq "master") {
      Write-Output "##vso[task.setvariable variable=environmentName]prod"
    } elseif ($branchName -eq "hml") {
      Write-Output "##vso[task.setvariable variable=environmentName]hml"
    } else {
      Write-Output "##vso[task.setvariable variable=environmentName]des"
    }
  displayName: 'Set environmentName based on branch'

- task: NodeTool@0
  inputs:
    versionSpec: '20.12.x'
  displayName: 'Install Node.js'

# Instala as dependências do projeto
- task: Npm@1
  displayName: 'Npm Install'
  inputs:
    command: 'install'

  # Executa o build para o ambiente
- task: Npm@1
  displayName: 'Run npm build'
  inputs:
    command: 'custom'
    customCommand: 'run build:$(environmentName)'

# Publica os artefatos de build para o destino correto
- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact (profs02)'
  inputs:
    PathtoPublish: '$(Build.SourcesDirectory)\dist\procergs-apm-angular\browser'
    ArtifactName: dist
    publishLocation: FilePath
    TargetPath: '$(pastaPublicacao)'


# Criar release no Azure DevOps
- task: AzureCLI@2
  displayName: 'Create Release in Azure DevOps'
  inputs:
    azureSubscription: 'PROCERGS' # Substitua pelo nome da conexão de serviço configurada no Azure DevOps
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      # Nome do projeto e pipeline
      projectName="APM.Angular" # Substitua pelo nome do projeto no Azure DevOps
      releaseDefinitionName="_APM.Angular" # Substitua pelo nome da release pipeline
      orgUrl="https://tfs.pro.intra.rs.gov.br/tfs/PROCERGSCollection" # Substitua pela URL da sua organização no Azure DevOps

      # Define o ambiente com base no branch
      branchName="$(Build.SourceBranch)"
      if [[ $branchName == "refs/heads/master" ]]; then
        environment="Desenvolvimento"
      elif [[ $branchName == "refs/heads/hml" ]]; then
        environment="Desenvolvimento"
      else
        environment="Desenvolvimento"
      fi

      # Criar a release no Azure DevOps
      echo "Criando release para o ambiente: $environment"
      az pipelines release create \
        --organization $orgUrl \
        --project $projectName \
        --definition-name $releaseDefinitionName \
        --description "Release automática para $environment" \
        --artifact-metadata-list "_APM.Angular=$(Build.BuildId)" \
        --variables environment=$environment